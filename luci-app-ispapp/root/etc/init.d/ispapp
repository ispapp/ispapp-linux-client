#!/bin/sh /etc/rc.common
## ispapp service manager ##
## path: /etc/init.d/ispapp

START=99
STOP=10
PID_FILE="/var/run/ispappd.pid"
LUA_SCRIPT="/bin/ispappd"

start() {
    echo "Starting ispappd..."

    # Check if the PID file exists
    if [ -f "$PID_FILE" ]; then
        # Read the PID from the file
        PID=$(cat "$PID_FILE")
        
        # Check if the process is still running
        if ps -p $PID > /dev/null 2>&1; then
            echo "ispappd is already running with PID $PID. Stopping it first..."
            kill $PID
            
            # Wait for the process to terminate
            wait $PID 2>/dev/null
            
            echo "Stopped existing instance of ispappd."
        else
            echo "Stale PID file found. Removing it."
            rm -f "$PID_FILE"
        fi
    fi

    # Start the Lua script in the background and save the new PID
    /usr/bin/env lua "$LUA_SCRIPT" start &
    echo $! > "$PID_FILE"

    echo "ispappd started with PID $(cat "$PID_FILE")"
}

stop() {
    if [ -f "$PID_FILE" ]; then
        PID=$(cat $PID_FILE)
        echo "Stopping ispappd with PID $PID..."
        
        # Kill the process and remove the PID file
        kill $PID && rm -f $PID_FILE
        echo "ispappd stopped."
    else
        echo "ispappd is not running or PID file not found."
    fi
}

restart() {
    echo "Restarting ispappd..."
    stop
    sleep 1
    start
}

reload() {
    if [ -f "$PID_FILE" ]; then
        PID=$(cat $PID_FILE)
        echo "Reloading ispappd with PID $PID..."
        
        # Send SIGHUP to the process to reload configuration
        kill -HUP $PID
        echo "ispappd reloaded."
    else
        echo "ispappd is not running or PID file not found."
    fi
}
