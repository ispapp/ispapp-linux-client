#!/bin/sh /etc/rc.common

START=95
USE_PROCD=1


get_config() {
	config_get_bool enabled $1 enabled 1
	config_get login $1 login "00:00:00:00:00:00"
	config_get topDomain $1 topDomain "qwer.ispapp.co"
	config_get topListenerPort $1 topListenerPort "8550"
	config_get topSmtpPort $1 topSmtpPort "8465"
	config_get topKey $1 topKey ""
	config_get ipbandswtestserver $1 ipbandswtestserver "3.239.254.95"
	config_get btuser $1 btuser "btest"
	config_get btpwd $1 btpwd "0XSYIGkRlP6MUQJMZMdrogi2"
	 # Save key-value pairs to YAML file
    save_to_yaml "enabled" "$enabled"
    save_to_yaml "login" "$login"
    save_to_yaml "topDomain" "$topDomain"
    save_to_yaml "topListenerPort" "$topListenerPort"
    save_to_yaml "topKey" "$topKey"
    save_to_yaml "topSmtpPort" "$topSmtpPort"
    save_to_yaml "ipbandswtestserver" "$ipbandswtestserver"
    save_to_yaml "btuser" "$btuser"
    save_to_yaml "btpwd" "$btpwd"
}

check_yaml_file() {
    local yaml_file="$1"

    # Check if the YAML file exists
    if [ ! -f "$yaml_file" ]; then
        echo "Error: YAML file $yaml_file not found."
        return 1
    fi

    # Check if required keys and values exist in the YAML file
    required_keys=("login" "topDomain" "topListenerPort" "topKey")

    for key in "${required_keys[@]}"; do
        if ! grep -q "$key:" "$yaml_file"; then
            echo "Error: Required key $key not found in $yaml_file."
            return 1
        fi
    done

    echo "YAML file $yaml_file is valid."
    return 0
}

save_to_yaml() {
    local key="$1"
    local value="$2"
    local yaml_file="/etc/config/ispapp-cfg.yml"
    # Check if the YAML file exists, create it if not
    [ ! -f "$yaml_file" ] && touch "$yaml_file" && echo "---" > "$yaml_file"
    # Check if the key already exists in the YAML file
    grep -q "$key:" "$yaml_file" && sed -i "s/$key:.*/$key: $value/" "$yaml_file" || echo "$key: $value" >> "$yaml_file"
    echo "Config saved: $key=$value in $yaml_file"
}

start_service() {
	logger -t ispapp 'start_service'
	config_load ispapp
	local yaml_file="/etc/config/ispapp-cfg.yml"
	config_foreach get_config settings
	if [ "$enabled" != 1 ]; then
		stop_service
		return 1
	fi
	#
	logger -t ispapp 'start ispapp'
	/etc/init.d/ispapp running || /etc/init.d/ispapp start
	logger -t ispapp 'start ispapp'
	# 
	procd_open_instance
	procd_set_param command /usr/sbin/ispappd up --reset
	if check_yaml_file "$yaml_file"; then
        procd_append_param command --config "$yaml_file"
    fi
	procd_set_param stdout 1
	procd_set_param stderr 1
	procd_close_instance
	logger -t ispapp 'end ispapp'
}
stop_service() {
	/etc/init.d/ispapp stop
	/etc/init.d/ispapp running && sleep 2
}
