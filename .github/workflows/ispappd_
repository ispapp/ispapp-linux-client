name: build Openwrt ispappd Ipk
on:
  push:
    branches:
      - karim
env:
  TZ: America/Los_Angeles
  IPK_NAME: ispappd

jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Detect build target
        id: set-matrix
        env:
          MATRIX_TARGET: ""
        run: |
          if [ "x${MATRIX_TARGET}" = "x" -o "x${MATRIX_TARGET}" = "xall" ]; then \
            echo "matrix={\"target\":[\"generic\"]}" >> $GITHUB_OUTPUT; \
          else \
            targets=""; \
            for target in ${MATRIX_TARGET}; do \
              targets="$targets, \"$target\"";
            done; \
            echo "matrix={\"target\":[${targets#, }]}" >> $GITHUB_OUTPUT; \
          fi
  build:
    needs: matrix
    runs-on: ubuntu-latest
    name: Build IPKs for ${{ matrix.target }}
    strategy:
      matrix: ${{fromJson(needs.matrix.outputs.matrix)}}
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
      # https://github.com/marketplace/actions/setup-node-js-environment
      # - run: |
      #     sed -i  's/PKG_VERSION:=\(.*\)/PKG_VERSION:=/g' ${IPK_NAME}/Makefile

      - name: Import Env
        env:
          MATRIX_TARGET: ${{ matrix.target }}
        run: cat .github/workflows/${MATRIX_TARGET}.env >> "$GITHUB_ENV"

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo swapoff -a || true
          sudo rm -rf /swapfile /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf rsync
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"
          # curl -fsSL https://raw.githubusercontent.com/P3TERX/dotfiles/master/.bashrc >> ~/.bashrc

      - name: Download SDK
        run: wget ${SDK_URL}${SDK_NAME}.tar.xz

      - name: Unpack SDK
        run: |
          mkdir ~/openwrt-sdk
          tar -xJf `pwd`/${SDK_NAME}.tar.xz --strip-components=1 -C ~/openwrt-sdk
          ln -s ${HOME}/openwrt-sdk ${SDK_NAME}

      - name: Clean Code
        run: |
          grep 'src-git base ' ${SDK_NAME}/feeds.conf.default > ${SDK_NAME}/feeds.conf
          grep 'src-git luci ' ${SDK_NAME}/feeds.conf.default >> ${SDK_NAME}/feeds.conf

      - name: Write Config
        run: |
          cat <<EOF >${SDK_NAME}/.config
          # CONFIG_SIGNED_PACKAGES is not set
          EOF

      - name: Defconfig
        id: defconfig
        run: |
          cd ~/openwrt-sdk
          make defconfig
          sed -i 's/^CONFIG_PACKAGE_\(.*\)=m$/# CONFIG_PACKAGE_\1 is not set/' .config
          grep '^CONFIG_PACKAGE_' .config
          echo "status=success" >> $GITHUB_OUTPUT

      - name: "Install"
        run: |
          cd ~/openwrt-sdk
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Copy Package
        run: |
          cp -r ./${IPK_NAME}/ ~/openwrt-sdk/package

      - name: Build IPK
        run: |
          cd ~/openwrt-sdk
          chmod 755 -R ./package/${IPK_NAME}
          make -j16 V=s package/${IPK_NAME}/compile

      - name: Upload bin directory
        uses: actions/upload-artifact@main
        with:
          name: ${{ env.SDK_ARCH }}
          path: ${{ env.SDK_NAME }}/${{ env.IPK }}/*.ipk
          compression-level: 9 # maximum compression
