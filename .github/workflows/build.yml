name: BUILD PACKAGES

on:
  push:
    branches:
      - karim

jobs:
  changes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

  build:
    needs: changes
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 10
      matrix:
        arch:
          - aarch64_cortex-a53
          - arm_cortex-a7_neon-vfpv4
          - aarch64_cortex-a72
          - arm_cortex-a9
          - arm_cortex-a15_neon-vfpv4
          - arm_cortex-a7
          - arm_cortex-a15_neon-vfpv4
          - ipq40xx-mikrotik
          - ipq40xx-generic
          - qualcommax-ipq807x
          - ipq806x-generic
          - ipq807x-generic-23.05.4
          - bmips-bcm63268
          - bmips-bcm6368
          - bmips-bcm6362
          - bmips-bcm6358
          - bmips-bcm6328
          - bmips-bcm6318
          - mediatek-mt7623
          - mediatek-mt7622
          - mediatek-mt7629
          - mediatek-filogic
          - bcm53xx-generic
          - ramips-rt305x
          - ramips-mt7620
          - ramips-mt7621
          - mvebu-cortexa72
          - ath79-mikrotik
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Create arch-device JSON
        id: create_arch_device_json
        run: |
          curl -o toh.json https://openwrt.org/toh.json
          arch_device_map=$(jq --arg arch "${{ matrix.arch }}" '[.entries[] 
            | select(.[42] == $arch) 
            | {
                "Brand": .[5],
                "CPU": .[7],
                "Device Type": .[18],
                "Model": .[37],
                "Target": .[59]
              }
          ]' toh.json)
          if [ -f arch_device_map.json ]; then
          jq --argjson new_entry "$arch_device_map" --arg arch "${{ matrix.arch }}" \
            '.[$arch] = $new_entry' arch_device_map.json > tmp.json && mv tmp.json arch_device_map.json
          else
          jq --argjson new_entry "$arch_device_map" --arg arch "${{ matrix.arch }}" \
            --null-input '{($arch): $new_entry}' > arch_device_map.json
          fi
      - name: Build luci-app-ispapp-${{ matrix.arch }}
        uses: openwrt/gh-action-sdk@main
        env:
          NO_REFRESH_CHECK: true
          IGNORE_ERRORS: true
          FEEDNAME: ispapp
          FEED_DIR: ${{ github.workspace }}
          ARCH: ${{ matrix.arch }}-22.03.2
          PACKAGES: luci-app-ispapp
          V: s

      - name: Find and echo all .ipk files
        run: |
            sudo apt-get install -y tree
            tree -R
      # - name: Store packages
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: luci-app-ispapp-${{ matrix.arch }}
      #     path: bin/packages/${{ matrix.arch }}/ispapp/*.ipk
        
      - name: Store packages
        uses: softprops/action-gh-release@v2
        with:
          files: |
            bin/packages/${{ matrix.arch }}/ispapp/*.ipk
            bin/packages/${{ matrix.arch }}/packages/luasec*.ipk
            bin/packages/${{ matrix.arch }}/packages/luasocket*.ipk
            arch_device_map.json
          tag_name: ${{ matrix.arch }}
      # - name: Store arch_device_map
      #   uses: softprops/action-gh-release@v2
      #   with:
      #     files: |
      #       arch_device_map.json
      #     tag_name: latest
      #     make_latest: true